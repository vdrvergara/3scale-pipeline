apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: api-import
spec:
  params:
    - default: example
      description: Service System name
      name: service-system-name
      type: string
    - description: 3Scale remote name.
      name: remote
      type: string
    - default: ''
      description: Production URL
      name: prod-url
      type: string
    - description: 3Scale URL.
      name: base-url
      type: string
    - default: app
      description: Directory with resources
      name: context-dir
      type: string
    - default: swagger.yaml
      description: Swagger file name
      name: swagger-file
      type: string
    - default: 'true'
      description: Debug script
      name: verbose
      type: string
    - default: fd390a6bb17d737a4535b7a21b26e41f
      description: User key
      name: user-key
      type: string 
  steps:
    - image: 'registry.redhat.io/3scale-amp2/toolbox-rhel7:3scale2.10'
      name: import-api
      script: |
        #!/usr/bin/env sh

        set -eu        

        # Fix 3scale-toolbox image error        
        export BUNDLE_GEMFILE=/opt/toolbox/Gemfile        

        if [[ $(3scale -c /config/.3scalerc.yaml import openapi -d $(params.remote) $(workspaces.shared.path)/$(params.context-dir)/src/main/resources/$(params.swagger-file) --override-private-base-url=$(params.base-url) --target_system_name=$(params.service-system-name) --default-credentials-userkey=$(params.user-key) --skip-openapi-validation --production-public-base-url=$(params.prod-url) --verbose) ]]
        then
          echo "Execução com sucesso"
        else
            echo "Falha"
        fi
      volumeMounts:
        - mountPath: /config
          name: toolbox
      workingDir: /workspaces/shared/$(params.context-dir)
  volumes:
    - configMap:
        name: toolbox
      name: toolbox
  workspaces:
  - description: The git repo will be cloned onto the volume backing this Workspace.
    name: shared     